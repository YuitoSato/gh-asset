name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: gh-asset-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: gh-asset-x86_64-apple-darwin.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: gh-asset-aarch64-apple-darwin.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: gh-asset-x86_64-pc-windows-msvc.zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }} gh-asset
          cd -

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} gh-asset.exe
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        run: |
          # Create release
          gh release create ${{ github.ref }} --title "Release ${{ github.ref }}" --generate-notes
          
          # Upload binary artifacts
          for file in artifacts/*/*.tar.gz artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
              gh release upload ${{ github.ref }} "$file" --clobber
            fi
          done
          
          # Generate and upload source tarball for Homebrew
          git archive --format=tar.gz --prefix=gh-asset-${GITHUB_REF#refs/tags/v}/ HEAD > gh-asset-${GITHUB_REF#refs/tags/v}.tar.gz
          gh release upload ${{ github.ref }} gh-asset-${GITHUB_REF#refs/tags/v}.tar.gz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}